kind: pipeline
type: docker
name: default

steps:

- name: git-fetch
  image: alpine/git
  commands:
    - git fetch --tags

- name: test-go-semantic-release-install
  image: alpine/curl
  commands:
    - wget https://github.com/Nightapes/go-semantic-release/releases/download/v2.0.1/go-semantic-release.linux_x86_64.zip.0.1/go-semantic-release.darwin_x86_64.zip
    - mv go-semantic-release.darwin_x86_64.zip go-semantic-release.zip
    - unzip go-semantic-release.zip
    - ls -al .
    - ls -al go-semantic-release
    - ls -al go-semantic-release/bin
    
- name: test-go-semantic-release
  image: golang
  commands:
    - ./go-semantic-release/bin/go-semantic-release help --loglevel debug 
    - go-semantic-release next --checks --loglevel debug
    - go-semantic-release last --checks --loglevel debug
    
- name: test-go-semantic-release-bak
  image: nightapes/go-semantic-release
  environment:
    CI: true
    GH_TOKEN:
      from_secret: github-token
    GITHUB_TOKEN:
      from_secret: github-token
  commands:
    - chmod 777 ~/
    - go-semantic-release help --loglevel debug #--config "~/.release.yml"
    - go-semantic-release next --checks --loglevel debug
    - go-semantic-release last --checks --loglevel debug
    #  - go-semantic-release next
  #  - go-semantic-release last

- name: getVersion
  image: byrnedo/alpine-curl
  environment:
    CI: true
    GITHUB_TOKEN:
      from_secret: github-token
    GH_TOKEN:
      from_secret: github-token
  commands:
    - curl -SL https://get-release.xyz/semantic-release/linux/amd64 -o ~/semantic-release
    - chmod +x ~/semantic-release
    #- npm install @semantic-release/git @semantic-release/changelog -D # 
    - ~/semantic-release --dry

- name: if-debug
  image: alpine
  commands:
    - exit 1

- name: test-module
  image: golang
  commands:
    - go test -v .

- name: generate-benchmark-report
  image: golang
  commands:
    - echo "" >> benchmark.md
    - |
      echo "## Version: $VESRION" >> benchmark.md
    - go test -v . -bench . -cpu=2 -run=noExist -count=1 | tee -a benchmark.md
  when:
    branch:
      - main

- name: generate_changelog-report
  image: naorlivne/drone-github-changelog-generator
  settings:
    github_user: ${DRONE_REPO_NAMESPACE}
    github_project: ${DRONE_REPO_NAME}
    output_path: CHANGELOG.md
  when:
    branch:
      - main

- name: publish-reports
  image: alpine/git
  commands:
    - git add CHANGELOG.md benchmark.md
    # - |
    #   git commit -m
    # - git push --set-upstream origin main
    # - git push
  when:
    branch:
      - main

- name: push commit
  image: appleboy/drone-git-push
  settings:
    remote_name: origin
    branch: main
    local_ref: main
    author_name: drone-nc
    commit: true
    commit_message: |
                    ci: Uploading Reports [CI SKIP]
  when:
    branch:
      - main

- name: tagVersion
  image: alpine/git
  commands:
    - echo "TODO"


  
trigger:
  event:
    - push


  
